open_command_browser :: () {
    using command_browser;

    if self_text_input {
        clear_text(self_text_input);
    } else {
        self_text_input = create_text_input(cast(u64)#location());

        array_reserve(*options, _EDITOR_COMMANDS.count);
        for * cmd: _EDITOR_COMMANDS {
            label_for_search := replace(cmd.name, " ", "");

            array_add(*options, .{label=cmd.name, ref=cmd, label_for_search=label_for_search});
        }
    }

    switch_editor_mode(.WIDGET);
    active_widget = Command_Browser;

} @EditorCommandUnlisted(editor_keymap)

command_browser: Command_Browser;

Command_Browser :: struct {
    search_text: string;

    self_text_input: *Text_Input;

    options: [..] List_Input.Option(*Editor_Command);
}